<?xml version="1.0" encoding="utf-8"?>
<CodeSnippet Format="1.0.0">
  <Header>
    <Title>EF Core Product Model</Title>
    <Shortcut>mainwindowcs</Shortcut>
    <Description>Модель Product для EF Core с навигационными свойствами</Description>
    <Author>mainwindowcs</Author>
    <Language>CSharp</Language>
    <SnippetTypes>
      <SnippetType>Expansion</SnippetType>
    </SnippetTypes>
  </Header>
  <Snippet>
    <Code Language="csharp"><![CDATA[
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Core;
using Core.Models;
using Microsoft.EntityFrameworkCore;

namespace CompanySystem
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            LoadData();
        }
        public void LoadData()
        {
            try
            {
                using (var context = new Context())
                {
                    var partners = context.Partners.Include(p => p.PartnerType).Include(p => p.PartnerProducts).ToList();
                    partnersList.ItemsSource = partners;
                }
            }
            catch (Exception ex) 
            {
                MessageBox.Show($"Не удалось загрузить список партнеров: {ex}", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
        public void LoadData_Click(object sender, RoutedEventArgs e)
        {
            LoadData();
        }
        public void OpenSaleHistory_Click(object sender, RoutedEventArgs e)
        {
            if (partnersList.SelectedItem is Partner partner)
            {
                var saleHistoryWindow = new SaleHistoryWindow(partner.Id);
                saleHistoryWindow.Show();
            }

        }
        public void OpenEditWindow_Click(object sender, RoutedEventArgs e)
        {
            if (partnersList.SelectedItem is Partner partner)
            {
                var editWindow = new EditPartnerWindow(partner.Id);
                editWindow.Show();
            }

        }
        public void OpenAddWindow_Click(object sender, RoutedEventArgs e)
        {
            var addWindow = new AddPartnerWindow();
            addWindow.Show();
        }
    }
 
   
}
 ]]></Code>
  </Snippet>
</CodeSnippet>

